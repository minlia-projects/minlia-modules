<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.module.article.mapper.ArticleCommentMapper">

    <sql id="QUERY_CONTENT">
        SELECT
            mact.id,
            mact.article_id,
            mact.content,
            mact.create_by,
            mact.create_date,
            mact.last_modified_by,
            mact.last_modified_date
        FROM
            mdl_article_comment mact
	</sql>

    <sql id="QUERY_CONDITION">
        <where>
            <if test="id != null">
                AND mact.id = #{id}
            </if>
            <if test="articleId != null">
                AND mact.article_id = #{articleId}
            </if>
            <if test="createBy != null">
                AND mact.create_by = #{createBy}
            </if>
        </where>
    </sql>

    <sql id="ORDER_BY">
        <if test="sorts != null">
            ORDER BY
            <foreach collection="sorts" item="item" separator=",">
                mact.${item.filed} ${item.direction}
            </foreach>
        </if>
    </sql>

    <insert id="create" parameterType="com.minlia.module.article.entity.ArticleComment">
        INSERT INTO mdl_article_comment(
            article_id ,
            content ,
            create_by
        ) VALUES (
            #{articleId} ,
            #{content} ,
            #{createBy}
        )
    </insert>

    <update id="update" parameterType="com.minlia.module.article.entity.ArticleComment">
        UPDATE mdl_article_comment
        <set>
            <if test="content != null">
                content = #{content},
            </if>
            last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR}
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
        DELETE FROM mdl_article_comment WHERE id = #{id}
    </delete>

    <select id="queryById" resultType="com.minlia.module.article.entity.ArticleComment">
        <include refid="QUERY_CONTENT"/>
        WHERE mact.id = #{id}
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(1) FROM mdl_article_comment mact
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="list" resultType="com.minlia.module.article.entity.ArticleComment">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

    <select id="queryDetailsList" resultType="com.minlia.module.article.vo.ArticleCommentVO">
        SELECT
            mact.id,
            mact.content,
            mact.create_by,
            mact.create_date,
            mact.article_id,
            mat.title AS articleTitle,
            mat.enabled AS articleEnabled,
            muit.avatar,
            muit.nickname
        FROM
            mdl_article_comment mact
        INNER JOIN mdl_article mat ON mat.id = mact.article_id
        LEFT JOIN mdl_user_info muit ON muit.guid = mact.create_by
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

    <select id="queryMyList" resultType="com.minlia.module.article.vo.ArticleMyCommentVO">
        SELECT
            mact.id,
            mact.article_id,
            mact.content,
            mact.create_date,
            mat.title AS articleTitle,
            mat.enabled AS articleEnabled,
            mat1.url AS articleCover
        FROM
            mdl_article_comment mact
        INNER JOIN mdl_article mat ON mat.id = mact.article_id
        LEFT JOIN mdl_attachment mat1 ON mat1.relation_id = mat.id AND mat1.belongs_to = 'ARTICLE_COVER'
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

</mapper>