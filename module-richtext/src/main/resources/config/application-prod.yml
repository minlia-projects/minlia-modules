server:
  port: 10004

system:
  appId: rich-text-app
  token: bWlubGlhCg==

# SPRING PROFILES
spring:
  profile: dev
  application:
    name: Rich Text
  http:
    encoding.charset: UTF-8
    encoding.enable: true
    encoding.force: true

  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    #    driverClassName: com.mysql.jdbc.Driver
    #    url: jdbc:mysql://192.168.196.244:13306/bmp?createDatabaseIfNotExist=true&useUnicode=true&useUnicode=true&characterEncoding=utf8&autoReconnect=true&verifyServerCertificate=false&useSSL=false&sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false&allowMultiQueries=true
    driverClassName: net.sf.log4jdbc.DriverSpy
    url: jdbc:log4jdbc:mysql://localhost:3306/minlia_mdl?createDatabaseIfNotExist=true&useUnicode=true&useUnicode=true&characterEncoding=utf8&autoReconnect=true&verifyServerCertificate=false&useSSL=false&sessionVariables=sql_mode='NO_ENGINE_SUBSTITUTION'&jdbcCompliantTruncation=false&allowMultiQueries=true
    name:
    username: root
    password: Root.2018
    druid:
      initial-size: 1                             #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      max-active: 200                             #最大连接池数量
      min-idle: 5                                 #最小连接池数量
      max-wait: 60000                             #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降,如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      validation-query: SELECT 1                  #用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      test-while-idle: true                       #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: false                       #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false                       #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      time-between-eviction-runs-millis: 60000    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000      #配置一个连接在池中最小生存的时间，单位是毫秒
      #    max-evictable-idle-time-millis: 3600000     #配置一个连接在池中最大生存的时间，单位是毫秒
      pool-prepared-statements: true              #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。5.5及以上版本有PSCache，建议开启。
      max-pool-prepared-statement-per-connection-size: 20 #开启poolPreparedStatements后生效
      log-abandoned: false
      remove-abandoned: false
      remove-abandoned-timeout-millis: 1800000    #关闭空闲连接超时时间
      use-global-data-source-stat: true           #合并多个DruidDataSource的监控数据
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500   #通过connectProperties属性来打开mergeSql功能;慢SQL记录
      async-init: true                            #asyncInit是1.1.4中新增加的配置，如果有initialSize数量较多时，打开会加快应用启动时间
      #      filters: stat,slf4j,wall                    #配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
#      filter:
#        wall:
#          config:
#            multi-statement-allow: true

system.security.jwt:
  tokenExpirationTime: 604800 # Number of minutes
  refreshTokenExpTime: 604800 # Minutes
  tokenIssuer: http://minlia.com
  tokenSigningKey: minlia8EV6Hy5RMFK4EEACIDAwQus

swagger:
  title: ${spring.application.name}接口
  description: ${spring.application.name}接口
  version: 1.0
  contact: cloud@minlia.com
  path: /api/.*
  redirect: true

mybatis:
  #    config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath*:mybatis/mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true

# 分页配置
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql