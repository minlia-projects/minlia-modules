<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.modules.rbac.mapper.UserMapper">

    <sql id="QUERY_CONTENT">
        SELECT
            DISTINCT
            mut.id ,
            mut.guid ,
            mut.username ,
            mut.password ,
            mut.cellphone ,
            mut.email ,
            mut.nickname ,
            mut.default_role ,
            mut.credentials_expired ,
            mut.locked ,
            mut.lock_limit ,
            mut.lock_time ,
            mut.last_login_time ,
            mut.last_login_ip ,
            mut.referral ,
            mut.enabled,
            mut.create_by ,
            mut.create_date ,
            mut.last_modified_by ,
            mut.last_modified_date
        FROM
            mdl_user mut
    </sql>

    <sql id="QUERY_CONDITION">
        <if test="roleCodes != null and roleCodes.size != 0">
            INNER JOIN mdl_user_role murt ON murt.user_id = mut.id
            INNER JOIN mdl_role mrt ON mrt.id = murt.role_id
        </if>

        <where>
            <if test="id != null">
                AND mut.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="guid != null">
                AND mut.guid = #{guid}
            </if>
            <if test="username != null">
                AND mut.username = #{username,jdbcType=VARCHAR}
            </if>
            <if test="cellphone != null">
                AND mut.cellphone = #{cellphone,jdbcType=VARCHAR}
            </if>
            <if test="email != null">
                AND mut.email = #{email,jdbcType=VARCHAR}
            </if>
            <if test="referral != null">
                AND mut.referral = #{referral,jdbcType=VARCHAR}
            </if>
            <if test="locked != null">
                AND mut.locked = #{locked,jdbcType=TINYINT}
            </if>
            <if test="enabled != null">
                AND mut.enabled = #{enabled,jdbcType=TINYINT}
            </if>
            <if test="roleCodes != null and roleCodes.size != 0">
                AND mrt.`code` IN
                <foreach collection="roleCodes" item="item" open="(" close=")" separator=",">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <sql id="ORDER_BY">
        <if test="sorts != null">
            ORDER BY
            <foreach collection="sorts" item="item" separator=",">
                mut.${item.filed} ${item.direction}
            </foreach>
        </if>
    </sql>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO mdl_user(
            guid ,
            username ,
            cellphone ,
            email ,
            nickname ,
            password ,
            default_role ,
            referral
        )
        VALUES(
            #{guid,jdbcType=VARCHAR},
            #{username,jdbcType=VARCHAR},
            #{cellphone,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR},
            #{nickname,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{defaultRole,jdbcType=VARCHAR},
            #{referral,jdbcType=VARCHAR}
        )
    </insert>

    <update id="update" parameterType="com.minlia.modules.rbac.bean.domain.User">
        UPDATE mdl_user
        <set>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=TINYINT} ,
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR} ,
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR} ,
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR} ,
            </if>
            <if test="defaultRole != null">
                default_role = #{defaultRole,jdbcType=VARCHAR} ,
            </if>
            <if test="locked != null">
                locked = #{locked,jdbcType=TINYINT} ,
            </if>
            <if test="lockTime != null">
                lock_time = #{lockTime,jdbcType=TIMESTAMP} ,
            </if>
            <if test="lockLimit != null">
                lock_limit = #{lockLimit,jdbcType=TINYINT} ,
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP} ,
            </if>
            <if test="lastLoginIp != null">
                last_login_ip = #{lastLoginIp,jdbcType=VARCHAR} ,
            </if>
            last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR}
        </set>
        WHERE guid = #{guid,jdbcType=VARCHAR}
    </update>

    <delete id="delete">
        DELETE FROM mdl_user_role WHERE user_id = #{id};
        DELETE FROM mdl_user WHERE id = #{id};
    </delete>

    <delete id="deleteRole">
        DELETE FROM mdl_user_role where user_id = #{arg0}
    </delete>

    <update id="grant">
        INSERT INTO mdl_user_role(
        user_id ,
        role_id
        )
        VALUES
        <foreach collection="arg1" item="item" index="index" separator=",">
            (
            #{arg0,jdbcType=BIGINT} ,
            #{item,jdbcType=SMALLINT}
            )
        </foreach>
        ;
    </update>

    <select id="queryByUsernameOrCellphoneOrEmail" resultType="com.minlia.modules.rbac.bean.domain.User">
        <include refid="QUERY_CONTENT"/>
        WHERE mut.guid = #{arg0} OR mut.username = #{arg0} OR mut.cellphone = #{arg0} OR email = #{arg0}
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM mdl_user mut
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="queryOne" resultType="com.minlia.modules.rbac.bean.domain.User">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="queryList" resultType="com.minlia.modules.rbac.bean.domain.User">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

</mapper>