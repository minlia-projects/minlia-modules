package rules;

import com.minlia.module.captcha.risk.event.RiskCaptchaEvent

import com.minlia.module.riskcontrol.entity.RiskBlackList
import com.minlia.module.riskcontrol.enums.RiskLevelEnum
import com.minlia.module.riskcontrol.enums.TimePeriodEnum
import com.minlia.module.riskcontrol.service.DimensionService
import com.minlia.module.riskcontrol.service.RiskBlackListService
import com.minlia.module.riskcontrol.service.RiskRecordService
import com.minlia.cloud.utils.ApiAssert
import org.apache.commons.lang3.time.DateUtils
import java.time.LocalDateTime
import com.minlia.module.captcha.constant.CaptchaCode

global DimensionService dimensionService
global RiskRecordService riskRecordService

rule "110_same_account_send_times"
    salience 110
    lock-on-active true
    when
        event:RiskCaptchaEvent()
    then
        long count  = dimensionService.distinctCountWithRedisAndConfig(event, new String[]{event.ACCOUNT}, event.TIME);

        String details = "30分钟内用户获取验证码最大次数的时间限制,count=" + count;
        if(event.getLevel().equals(RiskLevelEnum.WARNING)) {
            riskRecordService.createEvent(event, details);
        } else if (event.getLevel().equals(RiskLevelEnum.DANGER)) {
            riskRecordService.createEvent(event, details);
            ApiAssert.state(false, CaptchaCode.Message.OVER_SEND_TIMES);
        }
end