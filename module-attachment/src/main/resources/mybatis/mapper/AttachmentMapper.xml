<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.minlia.modules.attachment.mapper.AttachmentMapper">

    <sql id="QUERY_CONTENT">
		SELECT
			mat.id ,
			mat.belongs_to ,
			mat.relation_id ,
			mat.name ,
			mat.type ,
			mat.url ,
			mat.size ,
			mat.access_key ,
			mat.create_date ,
			mat.create_by ,
			mat.last_modified_date ,
			mat.last_modified_by
		FROM mdl_attachment mat
	</sql>

    <sql id="QUERY_CONDITION">
        <where>
            <if test="id != null">
                AND mat.id = #{id}
            </if>
            <if test="belongsTo != null">
                AND mat.belongs_to = #{belongsTo}
            </if>
            <if test="relationId != null">
                AND mat.relation_id = #{relationId}
            </if>
            <if test="accessKey != null">
                AND mat.access_key = #{accessKey}
            </if>
        </where>
    </sql>

    <sql id="ORDER_BY">
        <if test="sorts != null">
            ORDER BY
            <foreach collection="sorts" item="item" separator=",">
                mat.${item.filed} ${item.direction}
            </foreach>
        </if>
    </sql>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO mdl_attachment(
			belongs_to ,
			relation_id ,
			name ,
			type ,
			url ,
			size ,
			access_key ,
			create_by
		)
		VALUES
		(
			#{belongsTo} ,
			#{relationId} ,
			#{name} ,
			#{type} ,
			#{url} ,
			#{size} ,
			#{accessKey} ,
			#{createBy}
		)
	</insert>

    <insert id="createBatch">
        INSERT INTO mdl_attachment(
            belongs_to ,
            relation_id ,
            name ,
            type ,
            url ,
            size ,
            access_key ,
            create_by
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.belongsTo} ,
            #{item.relationId} ,
            #{item.name} ,
            #{item.type} ,
            #{item.url} ,
            #{item.size} ,
            #{item.accessKey} ,
            #{item.createBy}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.minlia.modules.attachment.entity.Attachment">
        UPDATE mdl_attachment
        <set>
            <if test="belongsTo != null">
                belongs_to = #{belongsTo},
            </if>
            <if test="relationId != null">
                relation_id = #{relationId},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="url != null">
                url = #{url},
            </if>
            <if test="size != null">
                size = #{size},
            </if>
            <if test="accessKey != null">
                access_key = #{accessKey},
            </if>
            last_modified_by = #{lastModifiedBy,jdbcType=VARCHAR} ,
            last_modified_date = #{lastModifiedDate,jdbcType=TIMESTAMP}
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete">
		DELETE FROM mdl_attachment WHERE id = #{id}
	</delete>

    <delete id="deleteByRelationIdAndBelongsTo">
		DELETE FROM mdl_attachment WHERE relation_id = #{arg0} AND belongs_to = #{arg1}
	</delete>

    <select id="queryOne" resultType="com.minlia.modules.attachment.entity.Attachment">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
    </select>

    <select id="queryList" resultType="com.minlia.modules.attachment.entity.Attachment">
        <include refid="QUERY_CONTENT"/>
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

    <select id="queryUrlList" resultType="String">
        SELECT
            mat.url
        FROM mdl_attachment mat
        <include refid="QUERY_CONDITION"/>
        <include refid="ORDER_BY"/>
    </select>

    <select id="queryFirstByUnusedKey" resultType="com.minlia.modules.attachment.entity.Attachment">
        <include refid="QUERY_CONTENT"/>
        WHERE mat.access_key = #{accessKey,jdbcType=VARCHAR}
        AND mat.relation_id IS NULL
        AND mat.belongs_to IS NULL
        LIMIT 1
    </select>

    <select id="queryUrls" resultType="java.lang.String">
        SELECT IFNULL(GROUP_CONCAT(url),'') FROM mdl_attachment WHERE relation_id = #{arg0} AND belongs_to = #{arg1}
    </select>

    <select id="queryFirstUrl" resultType="java.lang.String">
        SELECT url FROM mdl_attachment WHERE relation_id = #{arg0} AND belongs_to = #{arg1} LIMIT 0 , 1
    </select>

    <delete id="deleteByRelationIdAndBelongsToAndNotExistAccessKeys">

    </delete>

</mapper>