package rules;

import com.minlia.module.captcha.risk.event.RiskCaptchaEvent

import com.minlia.module.riskcontrol.enums.RiskLevelEnum
import com.minlia.module.riskcontrol.service.DimensionService
import com.minlia.module.riskcontrol.service.RiskRecordService
import com.minlia.module.riskcontrol.service.RiskDroolsConfigService
import com.minlia.cloud.utils.ApiAssert
import org.apache.commons.lang3.time.DateUtils
import java.time.LocalDateTime
import com.minlia.module.captcha.constant.CaptchaCode
import com.minlia.module.riskcontrol.entity.RiskDroolsConfig

global DimensionService dimensionService
global RiskRecordService riskRecordService
global RiskDroolsConfigService riskDroolsConfigService

rule "110_same_account_send_times"
    salience 110
    lock-on-active true
    when
        event:RiskCaptchaEvent()
    then
        long count  = dimensionService.distinctCountWithRedisAndConfig(event, new String[]{event.SCENE_VALUE}, event.TIME);

        if (!event.getLevel().equals(RiskLevelEnum.NORMAL)) {
            riskRecordService.createEvent(event, CaptchaCode.Message.NUM_OTP_MINS, 30, count);
            if (event.getLevel().equals(RiskLevelEnum.DANGER)) {
                ApiAssert.state(false, CaptchaCode.Message.NUM_OTP_MINS, 30, count);
            }
        }
end